{
  
    
        "post0": {
            "title": "Multiplayers",
            "content": "Our Group . The Multiplayers . Matthew | Ian | Gavin | Trystan | other group . Ryan .",
            "url": "http://localhost:4100/game_levels_mp/2024/01/16/Multiplayers.html",
            "relUrl": "/2024/01/16/Multiplayers.html",
            "date": " • Jan 16, 2024"
        }
        
    
  
    
        ,"post1": {
            "title": "Interactions_test1",
            "content": "Test123 .",
            "url": "http://localhost:4100/game_levels_mp/2024/01/16/Interactions_Test1.html",
            "relUrl": "/2024/01/16/Interactions_Test1.html",
            "date": " • Jan 16, 2024"
        }
        
    
  
    
        ,"post2": {
            "title": "Socket.io Multiplayer Game",
            "content": "Start Game Invert Restart",
            "url": "http://localhost:4100/game_levels_mp/2024/01/08/CSSE-oop-mutliplayer-game.html",
            "relUrl": "/2024/01/08/CSSE-oop-mutliplayer-game.html",
            "date": " • Jan 8, 2024"
        }
        
    
  
    
        ,"post3": {
            "title": "Dynamic Game Levels v2.0",
            "content": "&times; Settings Timer: 0 Start Game Restart Settings Leaderboard",
            "url": "http://localhost:4100/game_levels_mp/2024/01/08/CSSE-oop-game-levels2.html",
            "relUrl": "/2024/01/08/CSSE-oop-game-levels2.html",
            "date": " • Jan 8, 2024"
        }
        
    
  
    
        ,"post4": {
            "title": "Build a Student Page",
            "content": "HTML Fragments and Markdown . Building an entire frontend web application requires HTML, CSS, and JavaScript. HTML is responsible for the content, CSS adds styling to the web page, and JavaScript adds functionality and interactivity. Markdown is a short hand way of writing HTML, the GitHub pages system transforms Mardown to HTML. . In GitHub Pages, Jekyll serves as the build framework. It takes our choice of theme specified in the _config.yml file, along with our Markdown, HTML, and notebook files, to construct a complete static website. A significant portion of the frontend design work has already been done for users through the selection and use of a theme; this greatly reduces the need to code in CSS. . Jekyll converts Markdown (.md) files into HTML. Behind the scenes of GitHub Pages, Jekyll and Liquid programming language build and programmatically construct each Markdown file into a specific web page. Markdown provides a straightforward way to start with GitHub Pages development. In a Markdown file, you can exclusively use Markdown syntax or incorporate HTML, CSS, and JavaScript based on your expertise and experience. . Review these Fragments . The remainder of this document will describe and show code fragments to get the student developer ready for coding and commiting changes to GitHub. . GitHub Pages index.md . In GitHub Pages you can define code in Markdown. The index.md uses markdown to define a page about CompSci courses at Del Norte High School. . Markdown fragment. The markdown fragment is written by the developer and is an example of how to start a home page using Markdown. . ## Build your Home Page here # Investing in your Technical Future &gt; Explore the Computer Science Pathway at Del Norte High School and invest in your technical skills. All Del Norte CompSci classes are designed to provide a real-world development experience. Class time includes tech talks (lectures), peer collaboration, communication with teachers, critical thinking while coding, and creativity in projects. Grading is focused on time invested, participation with peers, and engagement in learning. - Introduction to concepts and requirements by the teacher - Project-based learning with teacher support - Peer communication and collaboration - Coding, developer operations, and critical thinking - Creativity, research, and utilizing ChatGPT - Class work with approximately 2-3 hours of homework per week ![csse](/game_levels_mp/images/ccr.png) . | HTML conversion. The HTML conversion of the Markdown fragment produced by GitHub Pages using Jekyll. This is programmatically converted from Markdown to HTML. . &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ## Build your Home Page here # Investing in your Technical Future &lt;span class=&quot;gt&quot;&gt; &amp;gt; Explore the Computer Science Pathway at Del Norte High School and invest in your technical skills. All Del Norte CompSci classes are designed to provide a real-world development experience. Class time includes tech talks (lectures), peer collaboration, communication with teachers, critical thinking while coding, and creativity in projects. Grading is focused on time invested, participation with peers, and engagement in learning.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Introduction to concepts and requirements by the teacher &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Project-based learning with teacher support &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Peer communication and collaboration &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Coding, developer operations, and critical thinking &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Creativity, research, and utilizing ChatGPT &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Class work with approximately 2-3 hours of homework per week !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;csse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/teacher/images/ccr.png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; . | . Images . In GitHub Pages, you can insert images in HTML or Markdown. The Teacher finds &lt;img&gt; easier to work with for embedding links when trying to control size. This example shows Markdown syntax for embedding images, but students can also use HTML syntax with the tag. . See index.md for ![]() syntax for images, or reference Markdown images | Or use “img” tage referencing HTML images | . Links . HTML contains an &lt;href&gt; tag to create links. Students can use either HTML or Markdown syntax for links. . Look up HTML links &lt;href&gt; or Markdown links []() syntax. These should become easy and familiar. | . Web Page Layout . A complete HTML Web Application is typically made off of a Layout and a series of Fragments (sometimes called templates). . The design of GitHub pages allows us to change themes with the _config.yml file key/value, change the value to a supported theme. Here is a portion of the _config.yml, the # is a comment symbol. Add a comment to midnight line, uncomment dinky line to try a new theme. Repeate process until you find something you like. | . # theme requirements remote_theme: pages-themes/midnight@v0.2.0 # remote_theme: pages-themes/dinky@v0.2.0 # remote_theme: pages-themes/minimal@v0.2.0 # remote_theme: pages-themes/hacker@v0.2.0 # remote_theme: pages-themes/cayman@v0.2.0 # remote_theme: pages-themes/time-machine@v0.2.0 plugins: - jekyll-remote-theme . Extensive customization of CSS may require advanced knowledge and can be time-consuming for beginners. I have observed many Students spending to much of their time writing custom CSS. It is better, for now, to learn to extend or change a GitHub theme and work with fragments of Markdown or HTML. | . Hacks . At the end of this week you should select your theme and start customizing your page. . Students should select a theme from the available options in the _config.yml file and start customizing their page accordingly. | Try to alter index.md with images and links according to some of your personal interests. For instance, make an outline of your classes, school activities, and homework requirements. Add your freeform picture. | Google Markdown Cheatsheet or W3Schools HTML Tutorial for guideance. Try to do something on your index.md not discussed in this blog. | .",
            "url": "http://localhost:4100/game_levels_mp/c4.3/c5.0/2023/08/17/markdown-html_fragments.html",
            "relUrl": "/c4.3/c5.0/2023/08/17/markdown-html_fragments.html",
            "date": " • Aug 17, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Tools and Equipment Overview",
            "content": "Make Development Easy . Learning Development tools, working with Projects, is the key to a rapid entry into Code/Code/Coding. A Computer, Git, and an Code Editor are the starting points for coding. Add Jupyter Notebooks (computational documents) and you bridge a Computer with Data Science. The beauty of Jupyter Notebooks is that it creates a computational narrative, a document that allows code and data with visual analysis, hypothesis, and conjecture. . A laptop, bring a laptop to class every day with the Development Tools installed on it. Preferred laptops are MacOS or Windows. Computers using either MacOS, Windows, or Linux are requirements for the course. Computers issued by the School, ie Chromebook, are not as effective because of the restrictions placed on adding software by PUSD. If you only have access to a school issued Chromebook, we will provide an option to access a Linux machine on AWS. | Sharing Code. GitHub, is the defacto hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere in the world. Git enables tracking changes, collaborating with others, and reverting to previous versions if needed. Think of it as the Google Docs for Coders. We will clone/push/pull changes to and from GitHub, this is the server where we store and share code in the cloud. Setup GitHub with a personal ID, not a school ID. GitHub Account. It is best if you can incorporate you first name or initials into your account, for recognition by those who know you. | . | Visual Studio Code (abbreviations VS Code, VSCode or VSC) is a powerful Code Editor. VSCode performs a lot of magic and automation behind the scenes to make your Code/Code/Coding life easier, ie telling you about errors in syntax. VS Code supports many programming languages, and has a marketplace of plugins and extensions that enhance the coding experience. VSCode Setup | . | GitHub Pages will be used to host your personal web site, notes, and experiences. GitHub Pages allows students to showcase their projects and create personal websites. Students can publish their coding projects, technical notes, and experiences on GitHub Pages for others to see. Review GitHub concepts 2-min https://www.youtube.com/watch?v=phGdqJB6ep0 | . | Jupyter Notebooks will be used to build running JavaScript, Python, or Java Code in to your own Technical Notes. Jupyter Notebooks is a valuable tool in data science and coding. It provides an interactive environment for running code, analyzing data, documenting code, and writing explanations. Review Jupyter basics 6-min https://www.youtube.com/watch?v=3jZYC9rGrNg | . | Slack Account and App, install App on Laptop, get used to reading announcements. Slack is a messaging tool similar to Discord. There will be important announcements and daily messages will be shared through Slack. Slack for Windows | Slack for MacOS | Slack for Linux | . | Windows Desktops install WSL. WSL enables students to work with Linux tools and environments on Windows machines. WSL supports a Linux-like terminal experience within the Windows operating system. WSL users will install WSL 2 and Ubuntu distriibutions. Everyone in this class will be working on a form of Linux when in Terminal. Install WSL | . | Docker is an open platform for developing, shipping, and running applications. Docker allows students to create isolated environments for testing and deploying their applications, ensuring consistency across different systems. Docker Desktop allows users to test deployment scripts on their local machines, enabling them to debug and troubleshoot their applications before deploying them on AWS. Docker Desktop for Macos | Docker Desktop for WSL2 Backend on Windows | . | Tools and Terminal Installs DeprecatedAnaconda (Conda) is the environment manager. Conda is an open-source package and environment management system that runs on Windows, MacOS, and Linux desktops. Conda is an environment manager that is very popular for data science projects. It helps you manage you tools in a controlled manner, this is called a virtual environment. Likely we will move away from Anaconda. The purpose of Conda is to avoid dependencies, but many people had problems with managing Python and Pid in VSCode related to Conda shell. Download Anaconda | . | Install a package manager. A package manager helps you install tools and manage updates. Homebrew is a package manager specifically for MacOS, while Ubuntu and AWS EC2 machines require the apt package manager for installing additional tools. Homebrew (brew install) for MacOS will be used to install tools. Homebrew is a package manager for MacOS. Apple’s MacOS does not have a development package manager by default. Install Homebrew | On Windows, Windows Subystem for Linux (WSL Ubuntu), use (sudo apt install) installs for packages. Things like Java, Python, and more will require installation with apt, as they are not included in Ubuntu by default. | On AWS Linux EC2 machines we will use (sudo apt install), similar to WSL, but is temporary to session. An AWS/Kasm Account for cloud computing will be required., account access will be provided by Teacher. AWS Cloud Computing and Electric Cloud Computing (EC2’s) will be used to run Development Enviornment from the Internet. | . | . | . Hacks . Review all the items mentioned above and get started with setup. Try to understand the concepts behind these tools and seek clarification when needed. Each student needs to take the setup process seriously and should highlight that consistent access to the necessary tools is essential for active participation in the class. . Bring your computer daily. If you don&#39;t have computer and tools access, you are effectually absent!!! | Review material on tools, draw a picture. Installing tools can be a bit of a process. Read, review, and get started. After you do it a little, it starts to become easy. | Blog why you love your tools. Do not fear your tools, love your tools&#39;. Then you become familiar and proficient in using your tools, they become extensions of your abilities and empower you to accomplish Code/Code/Coding tasks more efficiently. | Add yourself to Users Database. We need you registered so we know how to support you best. This registration will be used for automation now and through the year. | .",
            "url": "http://localhost:4100/game_levels_mp/c4.3/c5.0/2023/08/16/tools_equipment.html",
            "relUrl": "/c4.3/c5.0/2023/08/16/tools_equipment.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Pair Programming",
            "content": "“Real World” Projects . Don&#39;t do it alone. You and your pair, will collaboratively together and each of you will Build, deploy and host a Web Site. This Web project contains Technicals learned throughout the Trimester. This will be done in increments. Each week an assignment will be given and the next week it will be under Live Review. . Feature Considerations for Project Final Project and Blog Requirements A home or fun zone for your blog, also a unique idea(s) | Educational zones that capture every key learning objective | About Me, consider personal privacy issues as this will be public | . | Project Technicals Managing PBL Requirement for Project (Issues, Scrum Board) | CSSE, CSP, CSA. Use of “JavaScript, HTML, CSS”. Frontend or Presentation development. | CSP. Use of “Python Functions and Classes” in backend. | CSA. Use of “Java Classes and OOP” in backend. | Data Structures. The exchange between frontend and backend: Backend could be Data Frames from Pandas, “SQL” or “MongoDB” databases, etc. | . | . | Individual GitHub Pages considerations for Big Ideas 1 - 5 Each week we will be studying Big Ideas/Key Objectivies. There will be Units and blogs in the schedule will describe key objectives. In AP Classes this will include Collage Board Test Prep and PBL Tech Talks | GitHub (GH) Pages should be used as a project/lab notebook. In GH Pages, you can capture Project Based Learning (PBL). Also, in Jupyter Notebooks you can capture JavaScript, Python, Java key learnings each week using code cells! | BTW, using GH Pages will let you Code and Blog at the same time. Jupyter Notebooks using Python and Markdown will enable running code in code cells and notes in markdown cells. The Teachers like running code! Jupyter Notebooks, using Python kernel can do JavaScript, Python, Bash and other languages. | . | . Hacks . Establish PBL and Comp Sci attitude; often called an Agile Mindset or Growth Mindset. . Watch a video How I Would Learn To Code | Attitude. An Agile/Growth mindset is not knowing the answer, making lots of mistakes and performing iteration. A successful grade is dependent on making mistakes, research, asking questions, and continual iteration. | Requirement. Please bring a personal laptop or Chromebook to class daily. The Internet, ChatGPT, and AP Classroom web site will be considered a text book. | Requirements. Everything will be distributed electronically. All code you develop will be delivered to the Cloud. No paper! | Grading guidelines. There will be key technical objectives which will require &lt;/mark&gt;producing tangibles&lt;/mark&gt; aka tangible artifacts. Essentially, it is impossible to be late with work if you work consistently attend class, work in class and turn in progressive tangibles each week. Thus, failure to have work will result in point deduction. Additionally, late work must be defended in office hours and will receive 10% deduction. High “A” is very tough to achieve, something beyond the given tangible requirements. Something that exhibits an unforced desire to learn and Code/Code/Code. This grade is required to earn a Teacher recommendation. | Low “A” is consistency in producing tangibles toward Team Project and Individual GH Page according to Issues and Scrum Board plans. Plans must be consistent with key objectives and technicals. | “B” is having flaws in consistency or tangible shortcomings, but mostly on track. A flaw would be mostly working code, attempts, but incomplete. | “C” is a lack consistent effort, lacking tangibles. Lack of producing working Code. | Below “C” is composed of Slash/Slash/Slash offenses. Lack of attendance, disruptive behaviors, using phone inappropriately, doing work from other classes during CompSci class time, paper visible in class, and turning in tangibles that you can’t represent in live review. | Zero is a result of plagiarism. The Teachers will likely miss first offenses of plagiarism, thus any offense will result in an inquiry on previous work. Remember this is an effort based class. | . | .",
            "url": "http://localhost:4100/game_levels_mp/c1.4/2023/08/16/pair_programming.html",
            "relUrl": "/c1.4/2023/08/16/pair_programming.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Tool References",
            "content": "Visual Studio Code Overview . Jupyter Notebooks Review Jupyter basics 6-min . WSL Basic Commands . Linux Commands Cheat Sheet . Docker Docker Overview .",
            "url": "http://localhost:4100/game_levels_mp/2023/08/16/Tools_Hide.html",
            "relUrl": "/2023/08/16/Tools_Hide.html",
            "date": " • Aug 16, 2023"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Us",
          "content": "Creators of Alien World .",
          "url": "http://localhost:4100/game_levels_mp/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  

  
      ,"page6": {
          "title": "",
          "content": "Invert Idle Barking Walking",
          "url": "http://localhost:4100/game_levels_mp/navigation/game.html",
          "relUrl": "/navigation/game.html",
          "date": ""
      }
      
  

  
      ,"page7": {
          "title": "Game Project",
          "content": "New Home Page for Game Levels MP 2.1 .",
          "url": "http://localhost:4100/game_levels_mp/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page12": {
          "title": "Time Box",
          "content": "",
          "url": "http://localhost:4100/game_levels_mp/time/",
          "relUrl": "/time/",
          "date": ""
      }
      
  

  
  

  
  

  
      ,"page15": {
          "title": "Deployment Information",
          "content": "Deployment Information . Change the Backend URL in GameEnv. For a secure “https” connection use “wss” instead of ws teacher_portfolio/assets/js/multiplayer/GameEnv.js . static socket = io(`ws://${window.location.host.split(&quot;:&quot;)[0]}:3000`); . Use the Dockerfile and docker-compose in node_backend to adjust the actual output port in the docker-compose In NGINX make sure to forward web socket traffic, here is an NGINX file from another project using socket.io. . server { server_name platformer_ws.nighthawkcodingsociety.com; location / { proxy_pass http://localhost:300; # this magic is needed for WebSocket proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection $connection_upgrade; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; } } .",
          "url": "http://localhost:4100/game_levels_mp/node_backend/",
          "relUrl": "/node_backend/",
          "date": ""
      }
      
  

}